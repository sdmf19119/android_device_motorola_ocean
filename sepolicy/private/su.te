type super_init, domain;
type super_exec, exec_type, file_type;

typeattribute super_init coredomain;
permissive super_init;

tmpfs_domain(super_init);
domain_auto_trans(init, super_exec, super_init);
file_type_auto_trans(super_init, device, super_init);

allow { appdomain shell } super_init:unix_stream_socket { connectto write read };
allow { appdomain shell } super_init:sock_file { write read };
allow { appdomain shell } super_exec:file { getattr read open execute execute_no_trans };

create_pty(shell)
allowxperm shell devpts:chr_file ioctl TCSETSF;
#allowxperm untrusted_app untrusted_app_devpts:chr_file ioctl TCSETSF;

allow servicemanager super_init:dir { search read };
allow servicemanager super_init:file { open read };
allow servicemanager super_init:process { getattr };
allow servicemanager super_init:binder { call transfer };

typeattribute super_init mlstrustedobject;
typeattribute super_init mlstrustedsubject;

allow shell su_exec:file getattr;
typeattribute su mlstrustedsubject;

allow super_init { system_api_service app_api_service system_server_service }:service_manager find;

allow system_server super_init:fifo_file { read write };
allow system_server super_init:fd use;
allow system_server super_init:binder { call transfer };
allow system_server shell_devpts:chr_file { read write };

# Add su to various domains
net_domain(super_init)

hwbinder_use(super_init)

allow super_init toolbox_exec:file { read open execute_no_trans };
#allow super_init untrusted_app_devpts:chr_file { getattr };
allow super_init zygote_exec:file { execute read open execute_no_trans getattr };

#allow super_init super_init:capability { setuid setgid dac_override chown};

allow appdomain super_init:dir { search };
